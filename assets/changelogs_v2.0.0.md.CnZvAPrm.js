import{_ as a,c as t,o as i,ae as o}from"./chunks/framework.Cm3jgoNW.js";const g=JSON.parse('{"title":"Version 2.0.0","description":"","frontmatter":{},"headers":[],"relativePath":"changelogs/v2.0.0.md","filePath":"changelogs/v2.0.0.md"}'),n={name:"changelogs/v2.0.0.md"};function r(s,e,l,c,d,h){return i(),t("div",null,e[0]||(e[0]=[o('<h1 id="version-2-0-0" tabindex="-1">Version 2.0.0 <a class="header-anchor" href="#version-2-0-0" aria-label="Permalink to &quot;Version 2.0.0&quot;">​</a></h1><h2 id="migrating-to-version-2" tabindex="-1">Migrating to version 2 <a class="header-anchor" href="#migrating-to-version-2" aria-label="Permalink to &quot;Migrating to version 2&quot;">​</a></h2><p>Settings from <code>/config/inertia.php</code> will no longer be read since they have been moved to a dedicated package configuration file. You can publish the new configuration file like so:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>php artisan vendor:publish --tag=inertia-routes</span></span></code></pre></div><p>Full instructions regarding how to configure Inertia Routes can be found in the published config file</p><h2 id="new-features" tabindex="-1">New Features <a class="header-anchor" href="#new-features" aria-label="Permalink to &quot;New Features&quot;">​</a></h2><ul><li>Multiple configurations can now be set up for Inertia Routes</li><li>Change configuration by calling <code>AdminUI\\InertiaRoutes\\Facades\\InertiaRoutes::setConfig(&#39;my-settings&#39;)</code> from within your Laravel app</li><li><code>Filter</code> callable/function can be passed from your config to allow a final chance to add/remove routes. Useful for applying user permissions to provided routes</li></ul><h2 id="other-changes" tabindex="-1">Other changes <a class="header-anchor" href="#other-changes" aria-label="Permalink to &quot;Other changes&quot;">​</a></h2><ul><li>Moved share functionality to middleware rather than using the package boot method</li></ul>',9)]))}const p=a(n,[["render",r]]);export{g as __pageData,p as default};
