name: test, tag and release

on:
    push:
        branches:
            - main

jobs:
    tests:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.2
                  extensions: dom, curl, libxml, mbstring, zip
                  ini-values: error_reporting=E_ALL
                  tools: composer:v2
                  coverage: none

            - name: Install dependencies
              uses: nick-invision/retry@v2
              with:
                  timeout_minutes: 5
                  max_attempts: 5
                  command: composer install --no-interaction --no-scripts --no-plugins

            - name: Execute tests
              run: vendor/bin/pest

    tag:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        needs: tests
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: "0"

            - name: Bump version and push tag
              id: tag
              uses: anothrNick/github-tag-action@v1
              env:
                  WITH_V: true
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DEFAULT_BUMP: none
                  RELEASE_BRANCHES: main

        outputs:
            bump: ${{ steps.tag.outputs.part }}
            new_tag: ${{ steps.tag.outputs.new_tag }}

    build_release:
        runs-on: ubuntu-latest
        needs: tag
        if: needs.tag.outputs.bump != 'none'
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: pnpm/action-setup@v3
              with:
                  version: 8

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.2
                  extensions: dom, curl, libxml, mbstring, zip
                  ini-values: error_reporting=E_ALL
                  tools: composer:v2
                  coverage: none

            - name: Install dependencies
              uses: nick-invision/retry@v2
              with:
                  timeout_minutes: 5
                  max_attempts: 5
                  command: composer install --no-interaction --no-scripts --no-plugins

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 22
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install

            - name: Build JavaScript
              run: "npm run lint && npm run build"

            - name: Process changelog
              id: changelog_path
              run: |
                  if [[ ! -z $(cat changelog/next.md) ]] ; then
                    mv changelog/next.md changelog/${TAG}.md
                    touch changelog/next.md
                    echo "changelog=${TAG}" >> $GITHUB_OUTPUT
                  else
                    echo "changelog=next" >> $GITHUB_OUTPUT
                  fi
              env:
                  TAG: ${{ needs.tag.outputs.new_tag }}

            - name: Create zip
              run: tar -czvf dist.tar.gz dist

            - name: Create Github release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ needs.tag.outputs.new_tag }}
                  release_name: Release ${{ needs.tag.outputs.new_tag }}
                  body_path: changelog/${{ steps.changelog_path.outputs.changelog }}.md
                  draft: false
                  prerelease: false

            - name: Upload zip to release
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist.tar.gz
                  asset_name: dist.tar.gz
                  asset_content_type: application/tar+gz
